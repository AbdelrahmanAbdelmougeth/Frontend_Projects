{"version":3,"file":"static/js/857.f174b4c4.chunk.js","mappings":"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","sources":["webpack://react-complete-guide-code-18-diving-into-redux/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide-code-18-diving-into-redux/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","webpack://react-complete-guide-code-18-diving-into-redux/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide-code-18-diving-into-redux/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","components/comments/Comments.js","webpack://react-complete-guide-code-18-diving-into-redux/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__fkMYQ\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__SA4D5\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__JzLSF\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__j-34r\",\"loading\":\"NewCommentForm_loading__kld9x\",\"control\":\"NewCommentForm_control__TRihw\",\"actions\":\"NewCommentForm_actions__mmIRq\"};","import { useRef, useEffect } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nimport { addComment } from '../../lib/api';\nimport useHttp from '../../hooks/use-http';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]); \n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n    sendRequest({commentData: {text: enteredText}, quoteId: props.quoteId})\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from '../comments/CommentsList';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n   }, [quoteId, sendRequest]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    )\n  }\n\n  if (status === 'completed' && (loadedComments && loadedComments.length > 0)) {\n    comments = <CommentsList comments={loadedComments} />\n  }\n\n  if (status === 'comleted' && (!loadedComments && loadedComments.length === 0)) {\n    comments = <p className='centered'>No Comments Added Yet</p>\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment &&\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dEMa-\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { Fragment, useEffect } from \"react\";\r\n\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\n\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n\r\n    const { quoteId } = params;\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n    \r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    },[sendRequest, quoteId]);\r\n\r\n    if (status === 'pending')\r\n        return (\r\n            <div className=\"centered\">\r\n                <LoadingSpinner />\r\n            </div>\r\n        )\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>\r\n    }\r\n    if (status === 'completed' && !loadedQuote.text) {\r\n        return <p>No Quote Found</p>\r\n    }\r\n  \r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n            <Route path={match.path} exact>\r\n                <div className='centered'>\r\n                    <Link className='btn--flat' to={`${match.url}/comments`}>\r\n                        Load Comments\r\n                    </Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default QuoteDetail;"],"names":["props","className","classes","text","comments","map","comment","id","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","quoteId","onSubmit","LoadingSpinner","htmlFor","rows","ref","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","author","match","useRouteMatch","getSingleQuote","loadedQuote","Fragment","path","exact","to","url"],"sourceRoot":""}